{"version":3,"file":"static/js/283.1fb513e1.chunk.js","mappings":"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","sources":["pages/contents/Player.jsx","pages/contents/Download.jsx","pages/contents/Header.jsx","pages/contents/comments.jsx","pages/contents/Main.jsx","pages/contents/index.jsx"],"sourcesContent":["import Plyr from \"plyr-react\"\r\nimport \"plyr-react/plyr.css\"\r\n\r\nexport default function Player({ info, image }) {\r\n  const { Title, Files } = info;\r\n  const mp4 = Files.filter(({ FileExtension, Quality }) => {\r\n    return FileExtension === \"mp4\"\r\n  });\r\n  const plyrProps = {\r\n    type: 'video',\r\n    title: Title,\r\n    sources: [\r\n      ...mp4.map(({ Path, Quality }) => ({\r\n        src: Path,\r\n        type: 'video/mp4',\r\n        size: Quality === 5 ? 1080 : Quality === 4 ? 720 : Quality === 3 ? 480 : Quality === 2 ? 360 : 240\r\n      }))\r\n    ],\r\n    poster: image,\r\n  }\r\n  return (\r\n    <div className=\"sm:w-3/4 w-11/12  mx-auto\">\r\n      <Plyr source={{ ...plyrProps }} options={undefined} />\r\n    </div>\r\n  )\r\n}\r\n","\r\nexport default function Download({ listdl }) {\r\n  const { Files } = listdl[0];\r\n  return (\r\n    <div className='w-11/12 sm:w-5/12 bg-zinc-800 rounded-md p-4'>\r\n\r\n      {/* <ul className=\"sm:w-1/2 w-4/5 m-auto px-3 text-center  items-center text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg flex\">\r\n\r\n        <li className=\"w-full\">\r\n          <div className=\"flex items-center pl-3\">\r\n            <input id=\"horizontal-list-radio-millitary\" type=\"radio\" value=\"\" name=\"list-radio\" />\r\n            <label for=\"horizontal-list-radio-millitary\" className=\"w-full py-3 ml-2 text-sm font-medium text-gray-900 \">دوبله فارسی</label>\r\n          </div>\r\n        </li>\r\n        <li className=\"w-full\">\r\n          <div className=\"flex items-center pl-3\">\r\n            <input id=\"horizontal-list-radio-passport\" type=\"radio\" value=\"\" name=\"list-radio\" />\r\n            <label for=\"horizontal-list-radio-passport\" className=\"w-full py-3 ml-2 text-sm font-medium text-gray-900\"> زبان اصلی</label>\r\n          </div>\r\n        </li>\r\n      </ul> */}\r\n      <img src=\"/images/download.png\" alt=\"download\" className=\"m-auto\"/>\r\n      {Files.map(({ FileExtension, Description, Quality, Path },index) => {\r\n        const details = FileExtension === 'srt' ? \"دانلود زیرنویس \" + Description : FileExtension === 'mp4'\r\n          ? \"دانلود فیلم با کیفیت\" + (Quality === 5 ? 1080 : Quality === 4 ? 720 : Quality === 3 ? 480 : Quality === 2 ? 360 : 240) : null\r\n          ;\r\n        return details ? <a href={Path} target=\"_blank\" rel=\"noopener noreferrer\" className='border-red-600 border-2 p-3 block rounded-lg my-2' key={index}>{details}</a> : null;\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n","import { checkLoggedInUser } from '../../Connections'\r\nimport { useState, useEffect } from 'react'\r\nimport Player from './Player';\r\nimport Download from './Download';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Header({ headerValue }) {\r\n  const {\r\n    Title,\r\n    EnglishBody,\r\n    LandscapeImage,\r\n    PortraitImage9X11,\r\n    TrailerList,\r\n    AttachmentList,\r\n    ContentID,\r\n    Properties\r\n  } = headerValue;\r\n\r\n  const [loginState, setloginState] = useState();\r\n  const [display, setDisplay] = useState(false);\r\n  const [displaydownload, setdisplaydownload] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkLoggedInUser().then(res => setloginState(res));\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer rtl={true} position=\"top-right\" style={{ padding: \"10px\" }} />\r\n      <header>\r\n        <div className=\"flex sm:flex-row-reverse flex-col\">\r\n          <div className=\"sm:w-3/4 w-full relative\">\r\n            <img\r\n              src={\"https://cdn.tek-nic.com/image/1280/panel/\" + ContentID +\"/thumb.jpg\"}\r\n              alt=\"poster\"\r\n              className=\"sm:block hidden\"\r\n            />\r\n            <img src={\"https://cdn.tek-nic.com/image/850/panel/\" + ContentID + \"/portrait.jpg\"} alt=\"poster\" className=\"sm:hidden\" />\r\n            <div className=\"sm:visible invisible  w-3/12 h-full right-0 top-0 bg-gradient-to-r from-transparent to-black absolute\"></div>\r\n\r\n            <div className=\"w-full h-36 left-0 bg-gradient-to-b from-transparent to-black absolute bottom-[-1px]\"></div>\r\n          </div>\r\n          <div className=\"m-7 mt-0 sm:mt-14 sm:w-2/6\">\r\n            <h1 className=\"text-3xl my-2\">{Title}</h1>\r\n            <h2 className=\"text-xl text-gray-700\">{EnglishBody}</h2>\r\n            {\r\n              Properties.map(({ Name, Value }, index) => {\r\n                if ([\"سال\", \"رده سنی\", \"تاریخ اکران\", \"ژانر\", \"کارگردان\", \"زبان\", \"کشور\", \"رتبه IMDB\"].includes(Name))\r\n                  return (\r\n                    <h3 key={index}>\r\n                      {Name} : {Value}\r\n                    </h3>\r\n                  )\r\n              })\r\n            }\r\n            <div className=\"mt-3 flex text-center\">\r\n              <button\r\n                onClick={() => {\r\n                  setdisplaydownload(true);\r\n                  if (!loginState)\r\n                    toast.warn(\"برای دانلود لطفاٌ وارد سایت شوید !\")\r\n                }}\r\n                className=\"bg-green-600 rounded-md p-2 px-5 sm:w-auto w-full\"\r\n              >\r\n                دانلود و تماشا\r\n              </button>\r\n              {TrailerList.length >= 1 ?\r\n                <button\r\n                  onClick={() => { setDisplay(true) }}\r\n                  className=\"bg-stone-600 mx-1 rounded-md p-2 px-5 sm:w-auto w-full\"\r\n                >\r\n                  پیش نمایش\r\n                </button> :\r\n                <button\r\n                  className=\"bg-stone-600 mx-1 rounded-md p-2 px-5 sm:w-auto w-full\"\r\n                >\r\n                  تریلر بزودی ...\r\n                </button>\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      {\r\n        TrailerList.length >= 1 && display ?\r\n          <div className={display ? \"fixed  z-[3] w-full h-full bg-[#000000ba] top-0 \" : \"hidden\"}>\r\n            <button className=\"text-red-700 top-4 right-4 text-4xl p-2 z-[1] bg-[#4242428a] rounded-full pb-0 m-3\" onClick={() => setDisplay(false)}>X</button>\r\n\r\n            <Player info={TrailerList[0]} image={LandscapeImage} />  </div>\r\n          : null\r\n      }\r\n      {\r\n        AttachmentList.length >= 1 && displaydownload && loginState ?\r\n          <div className={displaydownload ? \"fixed w-full h-full bg-[#000000ba] top-0 flex justify-center items-center z-[3]\" : \"hidden\"}>\r\n            <button className=\"text-red-700 absolute top-4 right-4 text-4xl p-2 z-[1] bg-[#4242428a] rounded-full pb-0\" onClick={() => setdisplaydownload(false)}>X</button>\r\n            <Download listdl={AttachmentList} />\r\n          </div>\r\n          : null\r\n      }\r\n\r\n\r\n    </>\r\n\r\n  );\r\n}\r\n","export default function Comment({ commentValue }) {\r\n  return (\r\n    <ul>\r\n      {commentValue.map(({ Body }, index) => {\r\n        Body = Body.includes(\"گپ فیلم\") ? Body.replace(\"گپ فیلم\" ,\"نت فیلم\") : Body;\r\n        return (\r\n          <li className=\" m-3 bg-zinc-900 rounded-md\" key={index}>\r\n            <div className=\"flex items-center gap-2\">\r\n              <img\r\n                src=\"/icons/user.svg\"\r\n                alt=\"profile\"\r\n                className=\"w-10 bg-gray-500  rounded-lg\"\r\n              />\r\n              <span>کاربر ناشناس</span>\r\n            </div>\r\n            <p className=\"p-3\">{Body}</p>\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n","//import Lists from \"../../Components/Lists\";\r\nimport Comments from \"./comments\";\r\n//import { useRef } from \"react\";\r\n\r\nexport default function Main({ mainValue }) {\r\n  if (!Array.isArray(mainValue)) {\r\n    const { Body, StarsList, CommentTemplateList, AuthorList } = mainValue;\r\n    // const scrollRef = useRef(null);\r\n    /* \r\n  function handleClick(input) {\r\n    if (input == \"left\") {\r\n      scrollRef.current.scrollBy({ left: -100, behavior: \"smooth\" });\r\n    } else {\r\n      scrollRef.current.scrollBy({ left: 100, behavior: \"smooth\" });\r\n    }\r\n  }\r\n */\r\n    return (\r\n      <main className=\"p-10 pt-0\">\r\n        <div>\r\n          <h2 className=\"text-3xl my-4 break-words\">چکیده داستان :</h2>\r\n          <p dangerouslySetInnerHTML={{ __html: Body }}></p>\r\n        </div>\r\n        <div>\r\n          <h2 className=\"text-3xl my-4  break-words\">عوامل :</h2>\r\n          <div>\r\n            {/*ref={scrollRef} */}\r\n            <div className=\"relative\">\r\n              <ul className=\"flex flex-nowrap gap-3\">\r\n                <swiper-container\r\n                  update-on-window-resize=\"true\"\r\n                  width=\"360\"\r\n                  slides-per-view=\"3\"\r\n                  style={{\r\n                    \"--swiper-navigation-size\": \"10px\",\r\n                    \"--swiper-navigation-color\": \"#fff\",\r\n                  }}\r\n                  navigation={true}\r\n                >\r\n                  {StarsList.map(({ PersianName, AvatarUrl }, index) => (\r\n                    <swiper-slide key={index}>\r\n                      <li className=\" w-28 text-center flex-shrink-0 \">\r\n                        <img\r\n                          src={AvatarUrl || \"/icons/user.svg\"}\r\n                          alt=\"stars\"\r\n                          className=\"w-28 rounded-2xl\"\r\n                        />\r\n                        <h5>{PersianName}</h5>\r\n                      </li>\r\n                    </swiper-slide>\r\n                  ))}\r\n                </swiper-container>\r\n              </ul>\r\n            </div>\r\n            {/* \r\n          <button\r\n            className=\"absolute left-0\"\r\n            onClick={() => {\r\n              handleClick(\"left\");\r\n            }}\r\n          >\r\n            {\"-->\"}\r\n          </button>\r\n          <button\r\n            className=\"absolute right-0\"\r\n            onClick={() => {\r\n              handleClick(\"right\");\r\n            }}\r\n          >\r\n            {\"<--\"}\r\n          </button> */}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h2 className=\"text-3xl my-4 break-words\">نظرات کاربران :</h2>\r\n          <Comments commentValue={CommentTemplateList} />\r\n        </div>\r\n        {/*   <Lists /> */}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport HeadHome from \"../../Components/Header\";\r\nimport Footer from \"../../Components/Footer\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Lists from \"../../Components/Lists\";\r\nimport { Api } from \"../../Api\";\r\n\r\nexport default function Index() {\r\n  const { pathname } = useLocation();\r\n  //------- Get and Set data form api\r\n  const [contentapi, setcontentapi] = useState({});\r\n\r\n  const valueParameter = pathname.substring(10);\r\n\r\n  async function uri(urlparameter) {\r\n    const response = await Api(urlparameter.substring(10));\r\n    setcontentapi(response);\r\n    // let index = \"https://core.gapfilm.ir/api/v3.1/\";\r\n\r\n    // let homepage;\r\n    // if (pathname === \"/contents/Movies\") {\r\n    //   index = \"https://core.gapfilm.ir/api/v3.3/\";\r\n    //   homepage =\r\n    //     index +\r\n    //     `GetFirstPageByPlatform?PageSize=8&PageIndex=0&ContentRows=11&PlatformId=1&ParentEntityId=6&ParentType=2`;\r\n    // }else if (pathname === \"/contents/Kids\") {\r\n    //   index = \"https://core.gapfilm.ir/api/v3.3/\";\r\n    //    homepage =\r\n    //      index +\r\n    //      `GetFirstPageByPlatform?PageIndex=0&PageSize=8&ContentRows=11&PlatformId=9&PageType=1&PlatformType=1&ParentType=2`;\r\n    // } else {\r\n    //   homepage = index + `GetContent?Id=${id}&PageIndex=0`;\r\n    // }\r\n\r\n    // const response = await fetch(homepage);\r\n\r\n    // if (![\"/contents/Serial\", \"/contents/Kids\", \"/contents/Movies\"].includes(pathname)) {\r\n    //   const { Result, Status } = await response.json();\r\n    //   setcontentapi(Result);\r\n    // } else {\r\n    //   const { Result: { Sections } } = await response.json();\r\n    //   setcontentapi(Sections);\r\n    // }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    uri(pathname);\r\n    //  saveNewPerson();\r\n  }, [pathname]);\r\n\r\n  if (('Result' in contentapi)) {\r\n    const { Result } = contentapi;\r\n    return (\r\n      <>\r\n        <HeadHome />\r\n\r\n        {('AttachmentList' in Result) ? (\r\n          <Header headerValue={Result} />\r\n        ) : null}\r\n\r\n        {[\"Kids\", \"Movies\", \"Crime\", \"Actions\", \"Adventure\", \"History\", \"Horror\", \"Mystery\"].includes(valueParameter) && Array.isArray(Result.Sections) ? (\r\n          <div className=\"pt-20\">\r\n            {Result.Sections.map(({ Title, ContentSummaryRows, Image }, index) => {\r\n              if (!Title.includes(\"اسلایدر\")) {\r\n                return (\r\n                  <Lists\r\n                    key={index}\r\n                    title={Title}\r\n                    listValue={ContentSummaryRows}\r\n                    background={Image}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        ) : ('AttachmentList' in Result) && (\r\n          <Main mainValue={Result} />\r\n        )}\r\n\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"names":["Player","_ref","info","image","Title","mp4","Files","filter","_ref2","FileExtension","Quality","plyrProps","type","title","sources","_toConsumableArray","map","_ref3","Path","src","size","poster","_jsx","className","children","Plyr","source","_objectSpread","options","undefined","Download","listdl","_jsxs","alt","index","Description","details","href","target","rel","Header","headerValue","EnglishBody","LandscapeImage","TrailerList","PortraitImage9X11","AttachmentList","ContentID","Properties","_useState","useState","_useState2","_slicedToArray","loginState","setloginState","_useState3","_useState4","display","setDisplay","_useState5","_useState6","displaydownload","setdisplaydownload","useEffect","checkLoggedInUser","then","res","_Fragment","ToastContainer","rtl","position","style","padding","Name","Value","includes","onClick","toast","length","Comment","commentValue","Body","replace","Main","mainValue","Array","isArray","StarsList","CommentTemplateList","AuthorList","dangerouslySetInnerHTML","__html","width","navigation","PersianName","AvatarUrl","Comments","Index","pathname","useLocation","contentapi","setcontentapi","valueParameter","substring","_uri","_asyncToGenerator","_regeneratorRuntime","mark","_callee","urlparameter","response","wrap","_context","prev","next","Api","sent","stop","apply","arguments","_x","uri","Result","HeadHome","Sections","ContentSummaryRows","Image","Lists","listValue","background","Footer"],"sourceRoot":""}